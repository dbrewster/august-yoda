apiVersion: ad/v1
kind: BuiltinFunction
title: "Tester"
job_description: "maybe raises"
identifier: "1"
function_name: "SampleFunctions.test"
available_tools: []
input_schema:
  type: "object"
  properties:
    instructions:
      type: "string"
  required: ["instructions"]
output_schema:
  type: "object"
  properties:
    response:
      type: "string"
  required: ["response"]
num_to_start: 1

---

apiVersion: ad/v1
kind: BuiltinFunction
title: "AsyncTester"
job_description: "maybe raises, but asyncly"
identifier: "1"
function_name: "SampleFunctions.asyncTest"
available_tools: []
input_schema:
  type: "object"
  properties:
    instructions:
      type: "string"
  required: ["instructions"]
output_schema:
  type: "object"
  properties:
    response:
      type: "string"
  required: ["response"]
num_to_start: 1
---
apiVersion: ad/v1
kind: BuiltinFunction
title: "Adder"
job_description: "Adds two numbers"
identifier: "1"
function_name: "SampleFunctions.add"
available_tools: []
input_schema:
  $id: "http://yourdomain.com/schemas/adder_in.json"
  type: "object"
  properties:
    a:
      type: "number"
      description: "The LHS value"
    b:
      type: "number"
      description: "The RHS value"
  required: ["a", "b"]
output_schema:
  $id: "http://yourdomain.com/schemas/adder_out.json"
  type: "object"
  properties:
    x:
      type: "number"
      description: "The result"
  required: ["x"]
num_to_start: 1
---
apiVersion: ad/v1
kind: BuiltinFunction
title: "Multiplier"
identifier: "1"
job_description: "Multiplies two numbers"
available_tools: []
function_name: "SampleFunctions.multiply"
input_schema:
  $id: "http://yourdomain.com/schemas/mult_in.json"
  type: "object"
  properties:
    a:
      type: "number"
      description: "The LHS value"
    b:
      type: "number"
      description: "The RHS value"
  required: ["a", "b"]
output_schema:
  $id: "http://yourdomain.com/schemas/mult_out.json"
  type: "object"
  properties:
    x:
      type: "number"
      description: "The result"
required: ["x"]
num_to_start: 1

---

apiVersion: ad/v1
kind: SkilledWorker
title: "Maths"
identifier: "1"
job_description: "A general purpose math tool that can only add and multiply."
available_tools: ["Adder", "Multiplier"]
initial_plan: |
  You are a helpful agent designed answer user questions about math. You can only answer questions about addition and multiplication.
  
  Break the problem down into steps and use the tool available when needed.
initial_instructions: '{problem}
  Let''s think step by step.'
input_schema:
  $id: "http://yourdomain.com/schemas/maths_in.json"
  type: "object"
  properties:
    problem:
      type: "string"
      description: "The math question"
  required: ["problem"]
output_schema:
  $id: "http://yourdomain.com/schemas/maths_out.json"
  type: "object"
  properties:
    x:
      type: "string"
      description: "The result"
  required: ["x"]
llm: "openai.function"
model: gpt-3.5-turbo-16k
temperature: 0.2
num_to_start: 1
manager: "math_manager"
qaManager: "math_qa"
---

apiVersion: ad/v1
kind: Manager
title: "math_manager"
identifier: "1"
job_description: "Manges math"
available_tools: ["FindRelevantTools"]
initial_plan: |
  You are a helpful agent designed to manage other agents.
  You will be asked a variety of questions. Use the tools available to you to answer. 
  Return all of the information the tool gave you back to the user.
  
  Break the problem down into steps and use the tool available when needed.
initial_instructions: '{problem}
  Let''s think step by step.'
input_schema:
  $id: "http://yourdomain.com/schemas/math_manager_in.json"
  type: "object"
  properties:
    problem:
      type: "string"
      description: "The problem to solve"
  required: [ "problem" ]
output_schema:
  $id: "http://yourdomain.com/schemas/math_manager_out.json"
  type: "object"
  properties:
    result:
      type: "string"
      description: "The result"
  required: [ "result" ]
llm: "openai.function"
model: 'gpt-4'
temperature: 0.2
num_to_start: 1

---

apiVersion: ad/v1
kind: QAManager
title: "math_qa"
identifier: "1"
job_description: "Does qa for math"
available_tools: []
initial_plan: "You are a helpful agent designed do qa for other agents. Break the problem down into steps and use the tool available when needed. Return the answer when you know it"
initial_instructions: "{problem}"
input_schema:
  $id: "http://yourdomain.com/schemas/math_qa_in.json"
  type: "object"
  properties:
    problem:
      type: "string"
      description: "The problem to solve"
  required: [ "problem" ]
output_schema:
  $id: "http://yourdomain.com/schemas/math_qa_out.json"
  type: "object"
  properties:
    result:
      type: "string"
      description: "The result"
  required: [ "result" ]
llm: "openai.function"
model: 'gpt-3.5-turbo-16k'
temperature: 0.2
num_to_start: 1
manager: "math_manager"
---
