apiVersion: ad/v1
kind: BuiltinFunction
title: "DeploymentTools_FindRelevantTools"
job_description: "Finds all tools that match in the input description"
identifier: "1"
function_name: "DeploymentTools.findRelevantTools"
available_tools: []
input_schema:
  type: "object"
  properties:
    tool_description:
      type: "string"
      description: "A detailed description of the tool you are looking for"
  required: ["tool_description"]
output_schema:
  type: "object"
  properties:
    tools:
      type: "array"
      description: "The tools that might match"
      items:
        type: "string"
  required: ["tools"]
num_to_start: 1
---
apiVersion: ad/v1
kind: SkilledWorker
title: "FindRelevantTools"
identifier: "1"
job_description: "Finds tools in the system that match the given input"
available_tools: ["DeploymentTools_FindRelevantTools"]
initial_plan: "You are a helpful agent designed find tools in the system. Break the problem down into steps and use the tool available when needed."
initial_instructions: '{tool_description}
  Let''s think step by step.'
input_schema:
  type: "object"
  properties:
    tool_description:
      type: "string"
      description: "A detailed description of the tool you are looking for"
  required: ["tool_description"]
output_schema:
  type: "object"
  properties:
    tools:
      type: "array"
      description: "The tools that might match"
      items:
        type: "object"
        properties:
          title:
            type: string
            description: The job title of the tool
          job_description:
            type: string
            description: The job description of the tool
  required: ["tools"]
llm: "openai.function"
model: gpt-3.5-turbo-16k
temperature: 0.2
num_to_start: 1
manager: "deployment_tools_manager"
qaManager: "math_qa"

---
apiVersion: ad/v1
kind: Manager
title: "deployment_tools_manager"
identifier: "1"
job_description: "Manges Deployment Tools"
available_tools: []
initial_plan: |
  You are a helpful agent designed to manage other agents.
  You will be asked a variety of questions. Use the tools available to you to answer. 
  
  Break the problem down into steps and use the tool available when needed.
initial_instructions: '{problem}
  Let''s think step by step.'
input_schema:
  type: "object"
  properties:
    problem:
      type: "string"
      description: "The problem to solve"
  required: [ "problem" ]
output_schema:
  type: "object"
  properties:
    result:
      type: "string"
      description: "The result"
  required: [ "result" ]
llm: "openai.function"
model: 'gpt-4'
temperature: 0.2
num_to_start: 1
